// Generated by BUCKLESCRIPT VERSION 4.0.1, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Jest = require("@glennsl/bs-jest/src/jest.js");
var Json = require("@glennsl/bs-json/src/Json.bs.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");

function config(json) {
  return /* record */[
          /* projectId */Json_decode.field("projectId", Json_decode.string, json),
          /* databaseURL */Json_decode.field("databaseURL", Json_decode.string, json)
        ];
}

var Decode = /* module */[/* config */config];

var firebaseSecretsPath = "__tests__/secrets/firebase.json";

var jsonConfig = config(Json.parseOrRaise(Fs.readFileSync(firebaseSecretsPath)));

var config$1 = {
  databaseURL: jsonConfig[/* databaseURL */1],
  projectId: jsonConfig[/* projectId */0]
};

describe("Setuptest", (function () {
        describe(".config", (function () {
                Jest.test("should generate an object with the correct projectId", (function () {
                        return Jest.Expect[/* toContainString */11]("-", Jest.Expect[/* expect */0](config$1.projectId));
                      }));
                return Jest.test("should generate an object with the correct databaseURL", (function () {
                              return Jest.Expect[/* toContainString */11]("http", Jest.Expect[/* expect */0](config$1.databaseURL));
                            }));
              }));
        return /* () */0;
      }));

exports.Decode = Decode;
exports.firebaseSecretsPath = firebaseSecretsPath;
exports.jsonConfig = jsonConfig;
exports.config = config$1;
/* jsonConfig Not a pure module */
